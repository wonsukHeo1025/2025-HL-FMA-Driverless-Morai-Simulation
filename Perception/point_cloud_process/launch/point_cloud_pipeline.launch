<launch>
    <!-- Arguments for point_cloud_processor -->
    <arg name="min_angle" default="-90.0" />
    <arg name="max_angle" default="90.0" />
    <arg name="min_range" default="3.0" />
    <arg name="max_range" default="30.0" />
    <arg name="min_y" default="-10.0" />
    <arg name="max_y" default="15.0" />
    <arg name="min_z" default="-1.0" />
    <arg name="max_z" default="0.5" />
    <arg name="use_width_ratio" default="false" />
    <arg name="width_ratio" default="0.5" />
    <arg name="use_upsampling" default="true" />
    <arg name="upsample_factor" default="3" />
    <arg name="knn_neighbors" default="10" />
    <arg name="use_ground_removal" default="true" />

    <!-- Arguments for point_cloud_cluster_node -->
    <arg name="cluster_tolerance" default="0.1" />
    <arg name="min_cluster_size" default="5" />
    <arg name="max_cluster_size" default="25000" />
    <arg name="merge_threshold" default="0.3" />
    <arg name="marker_scale" default="0.3" />

    <!-- Nodes -->
    <node pkg="point_cloud_process" type="point_cloud_processor" name="point_cloud_processor" output="screen">
        <!-- Topic params: standard only (legacy removed) -->
        <param name="input_topic" value="/velodyne_points" />
        <param name="output_topic" value="/perception/lidar/processed_points" />
        <param name="min_angle" value="$(arg min_angle)" />
        <param name="max_angle" value="$(arg max_angle)" />
        <param name="min_range" value="$(arg min_range)" />
        <param name="max_range" value="$(arg max_range)" />
        <param name="min_y" value="$(arg min_y)" />
        <param name="max_y" value="$(arg max_y)" />
        <param name="min_z" value="$(arg min_z)" />
        <param name="max_z" value="$(arg max_z)" />
        <param name="use_width_ratio" value="$(arg use_width_ratio)" />
        <param name="width_ratio" value="$(arg width_ratio)" />
        <param name="use_upsampling" value="$(arg use_upsampling)" />
        <param name="upsample_factor" value="$(arg upsample_factor)" />
        <param name="knn_neighbors" value="$(arg knn_neighbors)" />
        <param name="use_ground_removal" value="$(arg use_ground_removal)" />
    </node>

    <node pkg="point_cloud_process" type="point_cloud_cluster_node" name="point_cloud_cluster_node" output="screen">
        <param name="input_topic" value="/perception/lidar/processed_points" />
        <param name="marker_topic" value="/vis/perception/lidar/cluster_markers" />
        <param name="cluster_tolerance" value="$(arg cluster_tolerance)" />
        <param name="min_cluster_size" value="$(arg min_cluster_size)" />
        <param name="max_cluster_size" value="$(arg max_cluster_size)" />
        <param name="merge_threshold" value="$(arg merge_threshold)" />
        <param name="marker_scale" value="$(arg marker_scale)" />
    </node>

    <node pkg="point_cloud_process" type="collision_detector_node" name="collision_detector_node" output="screen">
        <param name="cluster_markers_topic" value="/vis/perception/lidar/cluster_markers" />
        <param name="odometry_topic" value="/odometry" />
        <param name="twist_topic" value="/ublox_gps_node/fix_velocity" />
        <param name="flag_topic" value="/perception/collision/flag" />
        <param name="debug_topic" value="/vis/perception/collision/debug_markers" />
    </node>

    <!-- Front obstacle monitor (logs nearest distance in front ROI) -->
    <node pkg="point_cloud_process" type="front_obstacle_monitor.py" name="front_obstacle_monitor" output="screen">
        <param name="source" value="clusters" />
        <param name="cluster_topic" value="/vis/perception/lidar/cluster_markers" />
        <param name="distance_type" value="along_x" />
        <param name="x_min" value="10.0" />
        <param name="x_max" value="30.0" />
        <param name="y_half" value="2.0" />
        <param name="angle_min_deg" value="-45" />
        <param name="angle_max_deg" value="45" />
        <param name="enable_logging" value="false" />
        <param name="log_period" value="0.5" />
        <param name="publish_distance_topic" value="true" />
        <param name="distance_topic" value="/perception/obstacle/nearest_distance" />
    </node>
</launch>
